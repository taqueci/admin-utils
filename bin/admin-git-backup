#!/bin/bash

# Usage: git-backup.sh [BACKUPDIR] [TARGET] ...

topdir=$(dirname $(dirname $(readlink -f $0)))
if [ ! -z "$ADMIN_UTILS_CONF" ]; then
	conf=$ADMIN_UTILS_CONF
elif [ -f $topdir/config/admin-utils.conf ]; then
	conf=$topdir/config/admin-utils.conf
else
	conf=/etc/admin-utils.conf
fi
source $conf || exit 1
admin_utils_bin=${ADMIN_UTILS_BIN:-$topdir/bin}
admin_utils_lib=${ADMIN_UTILS_LIB:-$topdir/lib}
admin_utils_script=${ADMIN_UTILS_SCRIPT:-$topdir/script}


backupdir=${1:-$(date +$admin_svn_backup_dir)}

if [ -z "$2" ]; then
	targets=$admin_git_backup_targets
else
	shift
	targets=$@
fi

test -d $backupdir || mkdir -p $backupdir || exit 1

for t in $targets; do
	repos=$backupdir/$admin_git_backup_prefix$(basename $t)

	if [ -d $repos ]; then
		echo "Synchronizing Git repository from $t to $repos"
		(cd $repos && git fetch --all -q)
	else
		echo "Cloning Git repository from $t to $repos"
		git clone --mirror -q $t $repos
	fi
done

echo "Completed!"
